var documenterSearchIndex = {"docs":
[{"location":"#Code-and-Results","page":"Code and Results","title":"Code and Results","text":"","category":"section"},{"location":"","page":"Code and Results","title":"Code and Results","text":"We will introduce our replication code and results here.","category":"page"},{"location":"#Installation","page":"Code and Results","title":"Installation","text":"","category":"section"},{"location":"","page":"Code and Results","title":"Code and Results","text":"We need these packagesï¼š","category":"page"},{"location":"","page":"Code and Results","title":"Code and Results","text":"import Pkg\nPkg.add(\"Plots\")\nPkg.add(\"MAT\")\nPkg.add(\"JLD2\")\nPkg.add(\"Statistics\")\nPkg.add(\"CSV\")\nPkg.add(\"DataFrames\")","category":"page"},{"location":"#Parameters-We-set","page":"Code and Results","title":"Parameters We set","text":"","category":"section"},{"location":"","page":"Code and Results","title":"Code and Results","text":"Here we introduce all parameters we set and their main explanation, where we have our codes. ","category":"page"},{"location":"#Parameter-without-calibration","page":"Code and Results","title":"Parameter without calibration","text":"","category":"section"},{"location":"","page":"Code and Results","title":"Code and Results","text":"bet=0.998; # discount factor of workers\nbet_E=bet; # discount factor of entrepreneurs\nr=0.0175; # world interest rate\nsig=0.5; # the inverse of intertemporal substitution\nalp=0.5; # capital output elasticity\ndel=0.10; # depreciation rate\ng_n=0.03; # exogenous population growth\nr_soe_ini=0.093; # initial lending rate for SOEs\nice=1-r/(r_soe_ini); # iceberg cost","category":"page"},{"location":"#TFP-growth","page":"Code and Results","title":"TFP growth","text":"","category":"section"},{"location":"","page":"Code and Results","title":"Code and Results","text":"g_t=0.038; # exogenous TFP growth\nbet=bet*(1+g_t)^(1-sig); # TFP growth adjusted discount factor\nbet_E=bet_E*(1+g_t)^(1-sig); # TFP growth adjusted discount factor","category":"page"},{"location":"#calibration-targets","page":"Code and Results","title":"calibration targets","text":"","category":"section"},{"location":"","page":"Code and Results","title":"Code and Results","text":"KY_F_E=2.65; # the ratio of K/Y in the F sector to K/Y in the E sector\nrho_r=(r_soe_ini+0.09)/(r/(1-ice)); # the ratio of the rate of return in the E sector to that in the F sector\npsi1=(rho_r*r/(1-ice)+del)/(r/(1-ice)+del)/KY_F_E # share of managerial compensation\nksi=(KY_F_E)*(alp/(1-alp))/(1-psi) # productivity ratio of E over F","category":"page"},{"location":"#bank-loan-in-the-E-sector","page":"Code and Results","title":"bank loan in the E sector","text":"","category":"section"},{"location":"","page":"Code and Results","title":"Code and Results","text":"loan_asset=1; # loan asset ratio\neta=loan_asset*(1+r/(1-ice))/(1+rho_r*r/(1-ice)+(rho_r*r/(1-ice)-r/(1-ice))*loan_asset) # measure of financial frictions","category":"page"},{"location":"#initial-asset","page":"Code and Results","title":"initial asset","text":"","category":"section"},{"location":"","page":"Code and Results","title":"Code and Results","text":"initial_ratio=0.80;\ninitial_ratio_E=0.33;","category":"page"},{"location":"#demographic-structure","page":"Code and Results","title":"demographic structure","text":"","category":"section"},{"location":"","page":"Code and Results","title":"Code and Results","text":"age_max=50; # maximum age\nage_T=26; # the age when enterpreneurs become firm owners\nage_T_w=31; # the age when workers retire\ntime_max=400; # the end of the economy\nn_pre=100; # the initial size of workers\ne_pre=5; # the initial size of enterpreneurs","category":"page"},{"location":"#computing-demographic-structure","page":"Code and Results","title":"computing demographic structure","text":"","category":"section"},{"location":"","page":"Code and Results","title":"Code and Results","text":"n_weight = zeros(Float64, age_max)\ne_weight = zeros(Float64, age_max)","category":"page"},{"location":"#How-we-will-use-those-data?","page":"Code and Results","title":"How we will use those data?","text":"","category":"section"},{"location":"#Functions-we-use","page":"Code and Results","title":"Functions we use","text":"","category":"section"},{"location":"","page":"Code and Results","title":"Code and Results","text":"function fun_saving_pre_transition(x::Vector, dict::Dict)\n    age_max = dict[:age_max]\n    age_T_w = dict[:age_T_w]\n    g_t = dict[:g_t]\n    r = dict[:r]\n    bet = dict[:bet]\n    sig = dict[:sig]\n\n    # Other definitions\n    age = Int(x[1])  # current age\n    wage = x[2]  # current wage\n    wealth = x[3]  # current wealth\n\n    # Generating interest rate adjusted life-cycle earnings and others\n    w = zeros(Float64, age_max)\n    for i in age:age_max\n        if i < age_T_w\n            w[i] = wage * ((1 + g_t) / (1 + r))^(i - age)  # earnings\n        else\n            w[i] = 0\n        end\n    end\n\n    # Computing life-time wealth\n    A = sum(w) + wealth * (1 + r)\n\n    # Computing current optimal consumption and savings\n    ratio = zeros(Float64, age_max)\n    for i in age:age_max\n        # the interest rate adjusted ratio of optimal consumption to consumption of the current age\n        if i == age\n            ratio[i] = 1\n        else\n            ratio[i] = (bet * (1 + r) / (1 + g_t))^(1 / sig) * (1 + g_t) / (1 + r) * ratio[i - 1]\n        end\n    end\n\n    # Optimal consumption and savings\n    consumption = A / sum(ratio)\n    savings = wealth * r + wage - consumption\n    sr = savings / (wealth * r + wage)  # saving rate\n\n    # Computing next-period wealth\n    wealth_prime = (wealth * (1 + r) + wage - consumption) / (1 + g_t)\n\n    # Definition of y\n    y = [savings, wealth_prime, sr, consumption]\n    return y\nend","category":"page"},{"location":"","page":"Code and Results","title":"Code and Results","text":"function fun_saving_pre_transition_E(x::Vector, dict::Dict)\n    age_max = dict[:age_max]\n    age_T_w = dict[:age_T_w]\n    g_t = dict[:g_t]\n    r = dict[:r]\n    bet_E = dict[:bet]\n    sig = dict[:sig]\n\n    # Other definitions\n    age = Int(x[1])  # current age\n    wage = x[2]  # current wage\n    wealth = x[3]  # current wealth\n\n    # Generating interest rate adjusted life-cycle earnings and others\n    w = zeros(Float64, age_max)\n    for i in age:age_max\n        if i < age_T_w\n            w[i] = wage * ((1 + g_t) / (1 + r))^(i - age)  # earnings\n        else\n            w[i] = 0\n        end\n    end\n\n    # Computing life-time wealth\n    A = sum(w) + wealth * (1 + r)\n\n    # Computing current optimal consumption and savings\n    ratio = zeros(Float64, age_max)\n    for i in age:age_max\n        # the interest rate adjusted ratio of optimal consumption to consumption of the current age\n        if i == age\n            ratio[i] = 1\n        else\n            ratio[i] = (bet_E * (1 + r) / (1 + g_t))^(1 / sig) * (1 + g_t) / (1 + r) * ratio[i - 1]\n        end\n    end\n\n    # Optimal consumption and savings\n    consumption = A / sum(ratio)\n    savings = wealth * r + wage - consumption\n    sr = savings / (wealth * r + wage)  # saving rate\n\n    # Computing next-period wealth\n    wealth_prime = (wealth * (1 + r) + wage - consumption) / (1 + g_t)\n\n    # Definition of y\n    y = [savings, wealth_prime, sr, consumption]\n    return y\nend","category":"page"},{"location":"","page":"Code and Results","title":"Code and Results","text":"function fun_saving_E_existing(x::Vector, dictmain::Dict, dictopt::Dict)\n   \n    r = dictmain[:r]\n    ice_t = dictmain[:ice_t]\n    eta = dictmain[:eta]\n    age_max = dictmain[:age_max]\n    age_T = dictmain[:age_T]\n    g_t = dictmain[:g_t]\n    bet_E = dictmain[:bet_E]\n    sig = dictmain[:sig]\n\n    m_t = dictopt[:m_t]\n    rho_t = dictopt[:rho_t]\n\n    # Adjusting rate of return due to the endogenous borrowing constraint\n    rho_t_ad = max.(rho_t, (rho_t.*(1 .+r./(1 .-ice_t)) .+ eta.*(rho_t .- r./(1 .-ice_t))) ./ (1 .+r./(1 .-ice_t) - eta.*(rho_t .- r./(1 .-ice_t))))\n\n    # Other definitions\n    age = Int(x[1])  # age\n    wealth = zeros(Float64, age_max+1)\n    wealth[age] = x[2]  # wealth\n\n    # Generating interest rate adjusted life-cycle earnings and others\n    w = zeros(Float64, age_max)\n    for i in age:age_max\n        if i < age_T\n            w[i] = m_t[i-age+1] * ((1+g_t) / (1+r))^(i-age)  # earnings\n        else\n            w[i] = 0\n        end\n    end\n\n    # Computing life-time wealth\n    if age < age_T\n        A = sum(w) + (1+r) * wealth[age]\n    else\n        A = sum(w) + (1+rho_t_ad[1]) * wealth[age]\n    end\n\n    # Computing current optimal consumption and savings\n    ratio = zeros(Float64, age_max)\n    for i in age:age_max\n        if i == age\n            ratio[i] = 1\n        elseif i < age_T\n            ratio[i] = (bet_E * (1+r) / (1+g_t))^(1/sig) * (1+g_t) / (1+r) * ratio[i-1]\n        else\n            ratio[i] = (bet_E * (1+rho_t_ad[i-age+1]) / (1+g_t))^(1/sig) * (1+g_t) / (1+rho_t_ad[i-age+1]) * ratio[i-1]\n        end\n    end \n\n    consumption = zeros(Float64, age_max)\n    for i in age:age_max \n        if i == age\n            consumption[i] = A / sum(ratio)\n            if i < age_T\n                wealth[i+1] = (wealth[i] * (1+r) + m_t[i-age+1] - consumption[i]) / (1+g_t)\n            else\n                wealth[i+1] = (wealth[i] * (1+rho_t_ad[i-age+1]) - consumption[i]) / (1+g_t)\n            end\n        elseif i < age_T\n            consumption[i] = (bet_E * (1+r) / (1+g_t))^(1/sig) * consumption[i-1]\n            wealth[i+1] = (wealth[i] * (1+r) + m_t[i-age+1] - consumption[i]) / (1+g_t)\n        else\n            consumption[i] = (bet_E * (1+rho_t_ad[i-age+1]) / (1+g_t))^(1/sig) * consumption[i-1]\n            wealth[i+1] = (wealth[i] * (1+rho_t_ad[i-age+1]) - consumption[i]) / (1+g_t)\n        end\n    end\n\n    # Definition of y\n    result  = Dict(:wealth => wealth, :consumption => consumption)\n    return result \nend","category":"page"},{"location":"","page":"Code and Results","title":"Code and Results","text":"function fun_saving_E_newly_born(x::Vector, dictmain::Dict, dictopt::Dict)\n    m_t = dictopt[:m_t]\n    rho_t = dictopt[:rho_t]\n\n    sig = dictmain[:sig]\n    r = dictmain[:r]\n    ice_t = dictmain[:ice_t]\n    eta = dictmain[:eta]\n    age_max = dictmain[:age_max]\n    age_T = dictmain[:age_T]\n    g_t = dictmain[:g_t]\n    bet_E = dictmain[:bet_E]\n\n    # Savings of entrepreneurs\n\n    # Adjusting rate of return due to the endogenous borrowing constraint\n    rho_t_ad = max.(rho_t, (rho_t.*(1 .+r./(1 .-ice_t)) .+ eta.*(rho_t .- r./(1 .-ice_t))) ./ (1 .+r./(1 .-ice_t) - eta.*(rho_t .- r./(1 .-ice_t))))\n\n    # Other definitions\n    tt = x[1]  # Year of birth\n\n    # Agents born without assets\n    wealth = zeros(Float64, age_max+1)\n\n    # Generating interest rate adjusted life-cycle earnings and others\n    w = zeros(Float64, age_max)\n    for i = 1:age_max\n        if i < age_T\n            w[i] = m_t[tt+i-1] * ((1 + g_t) / (1 + r))^(i-1)  # Earnings\n        else\n            w[i] = 0\n        end\n    end\n\n    # Computing lifetime wealth\n    A = sum(w)\n\n    # Computing current optimal consumption and savings\n    ratio = zeros(Float64, age_max)\n    for i = 1:age_max\n        # The interest rate adjusted ratio of optimal consumption to consumption of the current age\n        if i == 1\n            ratio[i] = 1\n        elseif i < age_T  # Being manager\n            ratio[i] = (bet_E * (1 + r) / (1 + g_t))^(1 / sig) * (1 + g_t) / (1 + r) * ratio[i-1]\n        else  # Become firm owner\n            ratio[i] = (bet_E * (1 + rho_t_ad[tt+i-1]) / (1 + g_t))^(1 / sig) * (1 + g_t) / (1 + rho_t_ad[tt+i-1]) * ratio[i-1]\n        end\n    end\n\n    # Optimal consumption and savings\n    consumption = zeros(Float64, age_max)\n    for i = 1:age_max\n        if i == 1\n            consumption[i] = A / sum(ratio)\n            wealth[2] = (m_t[tt] - consumption[i]) / (1 + g_t)\n        elseif i < age_T  # Being manager\n            consumption[i] = (bet_E * (1 + r) / (1 + g_t))^(1 / sig) * consumption[i-1]\n            wealth[i+1] = (wealth[i] * (1 + r) + m_t[tt+i-1] - consumption[i]) / (1 + g_t)\n        else  # Become firm owner\n            consumption[i] = (bet_E * (1 + rho_t_ad[tt+i-1]) / (1 + g_t))^(1 / sig) * consumption[i-1]\n            wealth[i+1] = (wealth[i] * (1 + rho_t_ad[tt+i-1]) - consumption[i]) / (1 + g_t)\n        end\n    end\n\n    # Definition of y\n    result = Dict(:wealth => wealth, :consumption => consumption)\n\n    return result \nend ","category":"page"},{"location":"","page":"Code and Results","title":"Code and Results","text":"function fun_saving_F_existing(x::Vector, dictmain::Dict, dictopt::Dict)\n    age_max = dictmain[:age_max]\n    age_T_w = dictmain[:age_T_w]\n    g_t = dictmain[:g_t]\n    r = dictmain[:r]\n    bet = dictmain[:bet]\n    sig = dictmain[:sig]\n\n    w_t = dictopt[:w_t]\n\n    # Savings of entrepreneurs\n    \n    # Other definition\n    age = Int(x[1])   # age\n    wealth = zeros(Float64, age_max+1)  # wealth array\n    wealth[age] = x[2]   # wealth at given age\n    \n    # Generating interest rate adjusted life-cycle earnings and others\n    w = zeros(Float64, age_max)\n    for i in age:age_max\n        if i < age_T_w\n            w[i] = w_t[i - age + 1] * ((1 + g_t) / (1 + r))^(i - age)  # Earnings\n        else\n            w[i] = 0\n        end\n    end\n    \n    # Computing lifetime wealth\n    A = sum(w) + (1 + r) * wealth[age]\n    \n    # Computing current optimal consumption and savings\n    ratio = zeros(Float64, age_max)\n    for i in age:age_max\n        if i == age\n            ratio[i] = 1\n        else\n            ratio[i] = (bet * (1 + r) / (1 + g_t))^(1 / sig) * (1 + g_t) / (1 + r) * ratio[i - 1]\n        end\n    end\n    \n    # Optimal consumption and savings\n    consumption = zeros(Float64, age_max)\n    for i in age:age_max\n        if i == age\n            consumption[i] = A / sum(ratio)\n            if i < age_T_w\n                wealth[i + 1] = (wealth[i] * (1 + r) + w_t[i - age + 1] - consumption[i]) / (1 + g_t)\n            else\n                wealth[i + 1] = (wealth[i] * (1 + r) - consumption[i]) / (1 + g_t)\n            end\n        elseif i < age_T_w  # Being workers\n            consumption[i] = (bet * (1 + r) / (1 + g_t))^(1 / sig) * consumption[i - 1]\n            wealth[i + 1] = (wealth[i] * (1 + r) + w_t[i - age + 1] - consumption[i]) / (1 + g_t)\n        else  # Become retirees\n            consumption[i] = (bet * (1 + r) / (1 + g_t))^(1 / sig) * consumption[i - 1]\n            wealth[i + 1] = (wealth[i] * (1 + r) - consumption[i]) / (1 + g_t)\n        end\n    end\n    \n    # Definition of y\n    result  = Dict(:wealth => wealth, :consumption => consumption)\n    return result \nend","category":"page"},{"location":"","page":"Code and Results","title":"Code and Results","text":"function fun_saving_F_newly_born(x::Vector, dictmain::Dict, dictopt::Dict)\n    age_max = dictmain[:age_max]\n    age_T_w = dictmain[:age_T_w]\n    g_t = dictmain[:g_t]\n    r = dictmain[:r]\n    bet = dictmain[:bet]\n    sig = dictmain[:sig]\n\n    w_t = dictopt[:w_t]\n\n    # Savings of entrepreneurs\n    \n    # Other definition\n    tt = x[1]  # year of birth\n    \n    # Agents born without assets\n    wealth = zeros(Float64, age_max+1)\n    wealth[1] = 0\n    \n    # Generating interest rate adjusted life-cycle earnings and others\n    w = zeros(Float64, age_max)\n    for i in 1:age_max\n        if i < age_T_w\n            w[i] = w_t[tt+i-1] * ((1 + g_t) / (1 + r))^(i-1)  # Earnings\n        else\n            w[i] = 0\n        end\n    end\n    \n    # Computing lifetime wealth\n    A = sum(w)\n    \n    # Computing current optimal consumption and savings\n    ratio = zeros(Float64, age_max)\n    for i in 1:age_max\n        # The interest rate adjusted ratio of optimal consumption to consumption of the current age\n        if i == 1\n            ratio[i] = 1\n        else\n            ratio[i] = (bet * (1 + r) / (1 + g_t))^(1 / sig) * (1 + g_t) / (1 + r) * ratio[i - 1]\n        end\n    end\n    \n    # Optimal consumption and savings\n    consumption = zeros(Float64, age_max)\n    for i in 1:age_max\n        if i == 1\n            consumption[i] = A / sum(ratio)\n            wealth[2] = (w_t[tt] - consumption[i]) / (1 + g_t)\n        elseif i < age_T_w  # Being workers\n            consumption[i] = (bet * (1 + r) / (1 + g_t))^(1 / sig) * consumption[i - 1]\n            wealth[i + 1] = (wealth[i] * (1 + r) + w_t[tt+i-1] - consumption[i]) / (1 + g_t)\n        else  # Become retirees\n            consumption[i] = (bet * (1 + r) / (1 + g_t))^(1 / sig) * consumption[i - 1]\n            wealth[i + 1] = (wealth[i] * (1 + r) - consumption[i]) / (1 + g_t)\n        end\n    end\n    \n    # Definition of y\n    result = Dict(:wealth => wealth, :consumption => consumption)\n\n    return result \nend","category":"page"},{"location":"#After-we-set-those-functions,-what-shall-we-do-for-data?","page":"Code and Results","title":"After we set those functions, what shall we do for data?","text":"","category":"section"},{"location":"#Do-the-pre-transition","page":"Code and Results","title":"Do the pre transition","text":"","category":"section"},{"location":"","page":"Code and Results","title":"Code and Results","text":"k_pre = (alp / (r / (1 - ice) + del))^(1 / (1 - alp)) * nw_pre  # total capital during pre-transition period (all in the F sector)\nw_pre = (1 - alp) * (alp / (r / (1 - ice) + del))^(alp / (1 - alp))  # wage rate during pre-transition period\n\n# for workers\nwealth_pre = zeros(Float64, age_max)\nsr_pre = zeros(Float64, age_max)\nconsumption_pre = zeros(Float64, age_max)\n\nfor i in 1:age_max\n    x = zeros(Float64, 3) # [age, wage, wealth]\n    x[1] = i \n    if i < age_T_w\n        x[2] = w_pre  # wage\n    else\n        x[2] = 0  # wage after retirement\n    end\n    if i == 1  # born without assets\n        wealth_pre[i] = 0  # wealth\n    end\n    x[3] = wealth_pre[i]  # wealth\n    y = fun_saving_pre_transition(x, dictmain)\n    sr_pre[i] = y[3, 1]  # saving rate\n    consumption_pre[i] = y[4, 1]  # consumption\n    if i < age_max\n        wealth_pre[i + 1] = y[2, 1]\n    end\nend\n\n# initial condition\nwealth_pre .= initial_ratio * wealth_pre\n\n# save data\nsave(\"data_pre.jld2\", \"wealth_pre\", wealth_pre)\n\n# for entrepreneurs\nwealth_pre_E = zeros(Float64, age_max)\nsr_pre_E = zeros(Float64, age_max)\nconsumption_pre_E = zeros(Float64, age_max)\n\nfor i in 1:age_max\n    x = zeros(Float64, 3) # [age, wage, wealth]\n    x[1] = i \n    if i < age_T_w\n        x[2] = w_pre  # wage\n    else\n        x[2] = 0  # wage after retirement\n    end\n    if i == 1  # born without assets\n        wealth_pre_E[i] = 0  # wealth\n    end\n    x[3] = wealth_pre_E[i]  # wealth\n    y = fun_saving_pre_transition_E(x, dictmain)\n    sr_pre_E[i] = y[3, 1]  # saving rate\n    consumption_pre_E[i] = y[4, 1]  # consumption\n    if i < age_max\n        wealth_pre_E[i + 1] = y[2, 1]\n    end\nend\n\n# initial condition\nwealth_pre_E .= initial_ratio_E * wealth_pre_E\n\n\n# save data\nsave(\"data_pre_E.jld2\", \"wealth_pre_E\", wealth_pre_E)","category":"page"},{"location":"#Do-Transition","page":"Code and Results","title":"Do Transition","text":"","category":"section"},{"location":"","page":"Code and Results","title":"Code and Results","text":"# iteration choices\nrelax = 0.75\niter_max = 100\ntol = 1e-4\ndev_max = 1\niter = 1\n\n# initial guess\n# initial_guess\n\n# true results\ndata_result = matread(\"/Users/xuyuxuan/Desktop/computer econ/project/112395-V1/matlab/data_result.mat\")\n\nm_t = transpose(data_result[\"m_t\"])\nw_t = transpose(data_result[\"w_t\"])\nrho_t = transpose(data_result[\"rho_t\"])\ndictopt = Dict(:m_t => m_t, :w_t => w_t, :rho_t => rho_t)\n\nwealth_E = zeros(Float64, (time_max+age_max-1), (age_max))\nconsumption_E = zeros(Float64, (time_max+age_max-1), (age_max))\n\nE_t = zeros(Float64, time_max)\nae = zeros(Float64, time_max, age_max)\nAE = zeros(Float64, time_max, age_max)\nloan_ratio = zeros(Float64, time_max)\nloan = zeros(Float64, time_max, age_max)\nke = zeros(Float64, time_max, age_max)\nne = zeros(Float64, time_max, age_max)\nKE = zeros(Float64, time_max, age_max)\nNE = zeros(Float64, time_max, age_max)\nLE = zeros(Float64, time_max, age_max)\nAE_t = zeros(Float64, time_max)\nNE_t = zeros(Float64, time_max)\nKE_t = zeros(Float64, time_max)\nLE_t = zeros(Float64, time_max)\nN_t = zeros(Float64, time_max)\nw_t_new = zeros(Float64, (time_max+age_max-1))\nrho_t_new = zeros(Float64, (time_max+age_max-1))\nm_t_new = zeros(Float64, (time_max+age_max-1))\nYE_t = zeros(Float64, time_max)\nM_t = zeros(Float64, time_max)\n\ndev_w = zeros(Float64, (time_max+age_max-1))\ndev_rho = zeros(Float64, (time_max+age_max-1))\ndev_m = zeros(Float64, (time_max+age_max-1))\n\n\n# start to iterate\nwhile dev_max > tol && iter < iter_max\n\n    # an indicator for the end of transition\n    I_end = 0\n    \n    # existing entrepreneurs\n    for ii in 2:age_max\n        # computing existing entrepreneurs wealth given the guess of m_t and rho_t\n        result = fun_saving_E_existing([ii, wealth_pre_E[ii]], dictmain, dictopt)\n        wealth = result[:wealth]\n        consumption = result[:consumption]\n        # wealth time series for the existing entrepreneur with age ii\n        for tt in 1:(age_max - ii + 1)\n            wealth_E[tt, ii + tt - 1] = wealth[ii + tt - 1]\n            consumption_E[tt, ii + tt - 1] = consumption[ii + tt - 1]\n        end\n    end\n   \n    # newly born entrepreneurs\n    for tt in 1:time_max\n        # computing entrepreneurs wealth given the guess of m_t and rho_t\n        result = fun_saving_E_newly_born([tt], dictmain, dictopt)\n        wealth = result[:wealth]\n        consumption = result[:consumption]\n        # wealth time series for the existing entrepreneur with age ii\n        for ii in 1:age_max\n            wealth_E[tt + ii - 1, ii] = wealth[ii]\n            consumption_E[tt + ii - 1, ii] = consumption[ii]\n        end\n    end\n\n\n    # update new factor prices time series\n    for t in 1:time_max\n        # fixed size of managers\n        E_t[t] = e_pre - ee_pre\n\n        # assets in the E sector\n        for i in 1:age_max\n            ae[t, i] = wealth_E[t, i]  # entrepreneurial capital owned by an entrepreneur at time t with age i\n            AE[t, i] = e_weight[i] * ae[t, i]  # total capital owned by all entrepreneurs at time with age i\n        end\n        \n        # capital and labor in the E sector\n        for i in age_T:age_max\n            if rho_t[t] >= r / (1 - ice_t[t])  # borrowing is profitable\n                loan_ratio[t] = eta * (1 + rho_t[t]) / (1 + r / (1 - ice_t[t]) - eta * (rho_t[t] - r / (1 - ice_t[t])))  # loan asset ratio\n                loan[t, i] = wealth_E[t, i] * loan_ratio[t]\n                ke[t, i] = wealth_E[t, i] + loan[t, i]  # entrepreneurial capital owned by an entrepreneur at time t with age i\n            else  # borrowing is not profitable\n                loan[t, i] = 0\n                ke[t, i] = wealth_E[t, i]  # entrepreneurial capital owned by an entrepreneur at time t with age i\n            end\n           \n            ne[t, i] = ke[t, i] * ((1 - alp) * (1 - psi) * ksi^(1 - alp) / w_t[t])^(1 / alp)  # labor employed by an entrepreneur at time with age i\n            KE[t, i] = e_weight[i] * ke[t, i]  # total capital owned by all entrepreneurs at time with age i\n            NE[t, i] = e_weight[i] * ne[t, i]  # total labor employed by all entrepreneurs at time with age i\n            LE[t, i] = e_weight[i] * loan[t, i]  # total loan\n        end\n\n        # resource allocation\n        AE_t[t] = sum(AE[t, :])  # aggregate capital in the E sector\n        NE_t[t] = sum(NE[t, :])  # aggregate employment in the E sector\n        KE_t[t] = sum(KE[t, :])  # when rho > r\n        LE_t[t] = sum(LE[t, :])  # total loan\n        N_t[t] = nw_pre  # the size of workers (no migration)\n\n        # factor prices\n        if NE_t[t] >= N_t[t] && I_end == 0\n            I_end = 1\n            I_t = t\n        elseif I_end == 1\n            I_end = 1\n        end\n\n        if I_end == 0\n            w_t_new[t] = (1 - alp) * (alp / (r / (1 - ice_t[t]) + del))^(alp / (1 - alp))  # wage rate\n        else\n            NE_t[t] = N_t[t]\n            w_t_new[t] = (1 - psi) * (1 - alp) * (KE_t[t] / N_t[t])^alp * ksi^(1 - alp)  # wage rate\n        end\n        rho_t_new[t] = max(r, (1 - psi)^(1 / alp) * ksi^((1 - alp) / alp) * ((1 - alp) / w_t_new[t])^((1 - alp) / alp) * alp - del)  # the internal rate of returns for entrepreneurs\n        YE_t[t] = KE_t[t]^alp * (ksi * NE_t[t])^(1 - alp)  # aggregate output in the E sector\n        M_t[t] = psi * YE_t[t]  # total managerial compensations\n        m_t_new[t] = M_t[t] / E_t[t]  # compensations for young entrepreneurs\n    end\n\n    # imposing monotonicity\n    # if I_end == 1\n    #     NE_t[I_t:time_max] = N_t[t]\n    #     w_t_new[I_t:time_max] = (1 - psi) * (1 - alp) * (KE_t[I_t:time_max] ./ N_t[I_t:time_max]).^alp * ksi^(1 - alp)  # wage rate\n    #     KF_t[I_t:time_max] = 0\n    # end\n\n    # steady state assumption\n    w_t_new[time_max + 1:time_max + age_max - 1] .= w_t_new[time_max]\n    rho_t_new[time_max + 1:time_max + age_max - 1] .= rho_t_new[time_max]\n    m_t_new[time_max + 1:time_max + age_max - 1] .= m_t_new[time_max]\n\n    # deviation\n    global dev_w = abs.(w_t_new .- w_t)\n    global dev_rho = abs.(rho_t_new .- rho_t)\n    global dev_m = abs.(m_t_new .- m_t)\n    dev_w_max = maximum(dev_w)\n    dev_rho_max = maximum(dev_rho)\n    dev_m_max = maximum(dev_m)\n    global dev_max = maximum([dev_w_max, dev_rho_max, dev_m_max])\n\n    # renew\n    w_t .= w_t .* relax .+ w_t_new .* (1 - relax)\n    rho_t .= rho_t .* relax .+ rho_t_new .* (1 - relax)\n    m_t .= m_t .* relax .+ m_t_new .* (1 - relax)\n    global iter += 1\nend\n\n# result\nsave(\"data_result.jld2\", Dict(\"m_t\" => m_t, \"w_t\" => w_t, \"rho_t\" => rho_t))","category":"page"},{"location":"#Have-result-(for-six-panel-and-figures)","page":"Code and Results","title":"Have result (for six panel and figures)","text":"","category":"section"},{"location":"","page":"Code and Results","title":"Code and Results","text":"# workers savings and assets\nAF = zeros(Float64, time_max, age_max)\nCF = zeros(Float64, time_max, age_max)\nCE = zeros(Float64, time_max, age_max)\n\nN_t = zeros(Float64, time_max)\nAF_t = zeros(Float64, time_max)\nCF_t = zeros(Float64, time_max)\nCE_t = zeros(Float64, time_max)\nKF_t = zeros(Float64, time_max)\nYF_t = zeros(Float64, time_max)\nNF_t = zeros(Float64, time_max)\nNE_N_t = zeros(Float64, time_max)\nIF_t = zeros(Float64, time_max)\nIE_t = zeros(Float64, time_max)\nIF_Y_t = zeros(Float64, time_max)\nI_Y_t = zeros(Float64, time_max)\nY_N_t = zeros(Float64, time_max)\nSE_YE_t = zeros(Float64, time_max)\nSE_t = zeros(Float64, time_max)\nSF_YF_t = zeros(Float64, time_max)\nIE_Y_t = zeros(Float64, time_max)\nSF_t = zeros(Float64, time_max)\nFA_Y_t = zeros(Float64, time_max)\nBoP_Y_t = zeros(Float64, time_max)\nTFP_t = zeros(Float64, time_max)\nYG_t = zeros(Float64, time_max)\nK_Y_t = zeros(Float64, time_max)\nS_Y_t = zeros(Float64, time_max)\nNG_t = zeros(Float64, time_max)\nxxx_t = zeros(Float64, time_max)\nxx1_t = zeros(Float64, time_max)\nxx2_t = zeros(Float64, time_max)\nxx3_t = zeros(Float64, time_max)\nRR_t = zeros(Float64, time_max)\nlabor_share_t = zeros(Float64, time_max)\n\nwealth_F = zeros(Float64, (time_max+age_max-1), (age_max))\nconsumption_F = zeros(Float64, (time_max+age_max-1), (age_max))\n\n#=consumption_E = dicttrans[:consumption_E]\nNE_t = dicttrans[:NE_t]\nYE_t = dicttrans[:YE_t]\nKE_t = dictrans[:KE_t]\nAE_t = dicttrans[:AE_t]\nLE_t = dictrans[:LE_t]=#\n\nfor ii = 2:age_max\n\n    # computing existing workers wealth given the guess of  m_t and rho_t\n    result=fun_saving_F_existing([ii,wealth_pre[ii]], dictmain, dictopt)\n    wealth = result[:wealth]\n    consumption = result[:consumption]\n            \n    # wealth time series for the existing workers with age ii\n    for tt = 1:age_max-ii+1\n        wealth_F[tt,ii+tt-1]= wealth[ii+tt-1]\n        consumption_F[tt,ii+tt-1]= consumption[ii+tt-1]\n    end\nend # existing workers\n\n# newly born workers\nfor tt = 1:time_max\n        \n    # computing workers wealth given the guess of  m_t and rho_t\n    result=fun_saving_F_newly_born([tt], dictmain, dictopt)\n    wealth = result[:wealth]\n    consumption = result[:consumption]\n\n    # wealth time series for the existing enterpreneurs with age ii\n    for ii = 1:age_max\n        wealth_F[tt+ii-1,ii]= wealth[ii]\n        consumption_F[tt+ii-1,ii]= consumption[ii]\n    end\nend # newly born workers\n\n# demographic structure and others\nfor t = 1:time_max\n    \n    # no migration\n    N_t[t]=nw_pre\n    \n    # total assets of workers and total consumptions\n    for i = 1:age_max\n        AF[t,i]=n_weight[i]*wealth_F[t,i] \n        CF[t,i]=n_weight[i]*consumption_F[t,i]\n        CE[t,i]=e_weight[i]*consumption_E[t,i]\n    end\n\n    AF_t[t]=sum(AF[t,:]) # aggregate capital in the E sector\n    CF_t[t]=sum(CF[t,:]) # aggregate consumption in the F sector\n    CE_t[t]=sum(CE[t,:]) # aggregate consumption in the E sector\n    \n    # the F sector\n    if NE_t[t] < N_t[t]\n        KF_t[t]=(alp/(r/(1-ice_t[t])+del))^(1/(1-alp))*(N_t[t]-NE_t[t]) # aggregate capital in the F sector\n        YF_t[t]=KF_t[t]^alp*(N_t[t]-NE_t[t])^(1-alp) # aggregate output in the F sector\n        NF_t[t]=N_t[t]-NE_t[t] # aggregate workers in the F sector\n    else\n        KF_t[t]=0\n        YF_t[t]=0\n        NF_t[t]=0\n    end\nend\n\n# aggregation\nY_t= YF_t+YE_t\n\nK_t= KF_t+KE_t\n\nC_t= CF_t+CE_t\n\nfor t = 1:time_max-1\n    \n    # private employment share\n    NE_N_t[t]=NE_t[t]/N_t[t]\n    \n    # computing investment in the F sector\n    IF_t[t]=(1+g_t)*(1+g_n)*KF_t[t+1]-(1-del)*KF_t[t]\n    # -r*ice_t(t)/(1-ice_t(t))\n    \n    # computing investment in the E sector\n    IE_t[t]=(1+g_t)*(1+g_n)*KE_t[t+1]-(1-del)*KE_t[t]\n    \n    # investment rates in the two sector\n    if YF_t[t]>0\n        IF_Y_t[t]=IF_t[t]/YF_t[t]\n    else\n        IF_Y_t[t]=0\n    end\n    IE_Y_t[t]=IE_t[t]/YE_t[t]\n    \n    # computing workers savings\n    SF_t[t]=(1+g_t)*(1+g_n)*AF_t[t+1]-AF_t[t]+del*KF_t[t]\n    if YF_t[t] > 0\n        SF_YF_t[t]=SF_t[t]/YF_t[t]\n    end\n\n    # computing enterpreneurs savings\n    SE_t[t]=(1+g_t)*(1+g_n)*AE_t[t+1]-AE_t[t]+del*KE_t[t]\n    SE_YE_t[t]=SE_t[t]/YE_t[t]\n    \n    # aggregate output per capita\n    Y_N_t[t]=Y_t[t]/N_t[t]\n    \n    # aggregate investment rate\n    I_Y_t[t]=(IF_t[t]+IE_t[t])/Y_t[t]\n    \n    # aggregate saving rate\n    S_Y_t[t]=(SF_t[t]+SE_t[t])/Y_t[t]\n\n    # capital output ratio\n    K_Y_t[t]=K_t[t]/Y_t[t]\n    \n    # capital outflows\n    FA_Y_t[t]=(AE_t[t]+AF_t[t]-K_t[t])/Y_t[t] # stock\n    BoP_Y_t[t]=S_Y_t[t]-I_Y_t[t] # flow\n    \n    if t > 1\n        TFP_t[t]=Y_t[t]/Y_t[t-1]-alp*K_t[t]/K_t[t-1]-(1-alp)*N_t[t]/N_t[t-1]\n        YG_t[t]=(Y_t[t]/Y_t[t-1]-1)+g_n+g_t\n        NG_t[t]=(NE_N_t[t]/NE_N_t[t-1]-1)\n    end\n    \n    # test\n    xxx_t[t]=C_t[t]+SF_t[t]+SE_t[t]+r*ice_t[t]/(1-ice_t[t])*KF_t[t]+r*ice_t[t]/(1-ice_t[t])*LE_t[t]-Y_t[t]-r*FA_Y_t[t]*Y_t[t]\n    xx1_t[t]=CF_t[t]+AF_t[t+1]*(1+g_t)*(1+g_n)-(w_t[t]*nw_pre+(1+r)*AF_t[t])\n    xx2_t[t]=CE_t[t]+AE_t[t+1]*(1+g_t)*(1+g_n)-(m_t[t]*(e_pre-ee_pre)+(1+r)*AE_t[t]+(rho_t[t]-r)*(KE_t[t]-LE_t[t])+(rho_t[t]-r/(1-ice_t[t]))*LE_t[t])\n    xx3_t[t]=YE_t[t]-del*KE_t[t]-(m_t[t]*(e_pre-ee_pre)+rho_t[t]*KE_t[t]+w_t[t]*NE_t[t])\n    \n    # aggregate rate of return to capital\n    RR_t[t]=KE_t[t]/K_t[t]*rho_t[t]+KF_t[t]/K_t[t]*r/(1-ice_t[t])+del\n    \n    # labor share\n    labor_share_t[t]=(w_t[t]*nw_pre+0.6*m_t[t]*(e_pre-ee_pre))/Y_t[t]\n\nend\n\nY_data=Y_t[1:21]\nK_data=K_t[1:21]\n\nsave(\"YK_data.jld2\", \"Y_data\", Y_data, \"K_data\", K_data)\n\n# TFP growth from 1998 through 2005\nTFP_growth=Y_t[14]/Y_t[7]-alp*K_t[14]/K_t[7]-(1-alp)*N_t[14]/N_t[7]\noutput_growth=Y_t[14]/Y_t[7]-1\nK_growth=K_t[14]/K_t[7]-1\nw_growth=w_t[14]/w_t[7]-1\nannual_TFP_growth=(1+TFP_growth)^(1/7)-1+(1-alp)*g_t\nannual_output_growth=(1+output_growth)^(1/7)-1+g_n+g_t\nannual_wage_growth=(1+w_growth)^(1/7)-1+g_t\nannual_K_growth=(1+K_growth)^(1/7)-1+g_t+g_n\n\nTFP_growth_93_04=Y_t[13]/Y_t[2]-alp*K_t[13]/K_t[2]-(1-alp)*N_t[13]/N_t[2]\nannual_TFP_growth_93_04=(1+TFP_growth_93_04)^(1/11)-1+(1-alp)*g_t\n\n# aggregate rate of return in 1998\nrate_of_return_1998=KF_t[7]/K_t[7]*(r/(1-ice_t[7])+del)+KE_t[7]/K_t[7]*(rho_t[7]+del)\n\n# average saving rate from 1998 to 2005\nave_S_Y=mean(S_Y_t[7:14])\n\n#########\n# Figures\n#########\n\n#Figure 1\n\ntime_begin=1\ntime_end=100\ntt=[time_begin:time_end]\n\nf1p1 = plot(tt, Y_N_t[time_begin:time_end], title=\"panel a: aggregate output per capita\",titlefontsize=5, linewidth=2, color=:red)\n\n# subplot(4,2,2)\n# plot(tt,NE_t(time_begin:time_end),'r','linewidth',2)\n# # gtext('employment in the E sector')\n# hold on\n# plot(tt,N_t(time_begin:time_end),'k','linewidth',2)\n# # gtext('total employment')\n# title('panel b: employment')\n# \n# hold off\n\nf1p2 = plot(tt, NE_N_t[time_begin:time_end], title=\"panel b: private employment share\", titlefontsize=5, linewidth=2, color=:red)\n\nf1p3 = plot(tt, w_t[time_begin:time_end], title=\"panel c: wage rate\", titlefontsize=5,linewidth=2, color=:red)\n\n# plot(tt,m_t(time_begin:time_end),'r','linewidth',2)\n# # gtext('managerial compensations')\n# hold on\n# gtext('wage rate')\n# title('panel c: income inequality')\n\nf1p4 = plot(tt, rho_t[time_begin:time_end], title=\"panel d: rate of return to capital\", titlefontsize=5, linewidth=2, color=:red)\n\n# gtext('the rate of returns for entrepreneurs')\n#r_t(time_begin:time_end)=r\n#plot(tt,r_t(time_begin:time_end)./(1-ice_t(time_begin:time_end)),'k','linewidth',2)\n# gtext('the international interest rate')\n\nsubplot = plot(tt, I_Y_t[time_begin:time_end], label=\"I/Y\", color=:red, linewidth=2)\nplot!(subplot, tt, S_Y_t[time_begin:time_end], label=\"S/Y\", color=:black, linewidth=2)\nf1p5 = plot!(subplot, title=\"panel e: the aggregate investment and saving rates\",titlefontsize=5 )\n\nf1p6 = plot(tt, K_Y_t[time_begin:time_end], title=\"panel f: the aggregate capital output ratio\", titlefontsize=5, linewidth=2, color=:red)\n\nf1p7 = plot(tt, FA_Y_t[time_begin:time_end], title=\"panel h: foreign reserves output ratio\", titlefontsize=5, linewidth=2, color=:red)\n\nf1p8 = plot(tt, TFP_t[time_begin:time_end], title=\"panel h: TFP growth rate\", titlefontsize=5, linewidth=2, color=:red)\n\nf1 = plot(f1p1, f1p2, f1p3, f1p4, f1p5, f1p6, f1p7, f1p8, layout=(4,2))\n\nsavefig(f1, \"figure_1.png\")\n\ndata_sav=[0.375905127,\n0.407118937,\n0.417687893,\n0.418696583,\n0.40780248,\n0.410464312,\n0.403822419,\n0.38944417,\n0.377046856,\n0.386282215,\n0.404312245,\n0.432183421,\n0.45699599,\n0.48157501,\n0.501039245,\n0.51206739\n]\n\ndata_inv=[0.365907013,\n0.425514577,\n0.405060796,\n0.402900174,\n0.38812706,\n0.366991801,\n0.361881671,\n0.361607682,\n0.352842054,\n0.36494929,\n0.378603128,\n0.410289533,\n0.431546215,\n0.427396271,\n0.425903209,\n0.423250045\n]\n\ndata_res=[0.038897003,\n0.033068468,\n0.088594251,\n0.09722219,\n0.117766451,\n0.1420134,\n0.138692692,\n0.140515342,\n0.138805234,\n0.161149952,\n0.196974228,\n0.244702191,\n0.314965846,\n0.355479964,\n0.383515959,\n0.441448679\n]\n\n#Figure 2\n\n# end of year\nend_year=2012\n\nsubplot1 = plot([1992:end_year], S_Y_t[1:end_year-1992+1], label=\"model\", color=:blue, linewidth=2)\n\nplot!(subplot1, [1992:2007], data_sav, label=\"data\", color=:red, linewidth=2)\n\nf2p1 = plot(subplot1, title=\"Aggregate Saving Rate\", titlefontsize=8, xlabel=\"year\")\n\n\nsubplot2 = plot([1992:end_year], I_Y_t[1:end_year-1992+1], label=\"model\", color=:blue, linewidth=2)\n\nplot!(subplot2, [1992:2007], data_inv, label=\"data\", color=:red, linewidth=2)\n\nf2p2 = plot(subplot2, title=\"Aggregate Investment Rate\", titlefontsize=8,xlabel=\"year\")\n\nf2 = plot(f2p1, f2p2, layout=(2,1))\n\nsavefig(f2, \"figure_2.png\")\n\ndata_em_sh=[0.041140261,\n0.063212681,\n0.10366673,\n0.168350106,\n0.232185343,         \n0.322086332,\n0.434391151,\n0.474376982,\n0.522120471,\n0.563805401\n]\n\ndata_em_sh_agg=1/100*[7.12,\n9.21,\n12.41,\n15.58,\n17.36,\n19.24,\n25.79,\n28.14,\n28.86,\n31.51,\n36.28,\n40.63,\n43.94,\n47.7,\n50.69,\n53.84\n];\n\ndata_SI_Y=[0.009998114,\n-0.01839564,\n0.012627097,\n0.015796409,\n0.01967542,\n0.043472511,\n0.041940748,\n0.027836488,\n0.024204802,\n0.021332925,\n0.025709117,\n0.021893888,\n0.025449774,\n0.054178739,\n0.075136036,\n0.088817345\n];\n\n#Figure 3\n\nsubplot3 = plot([1992:end_year], NE_N_t[1:end_year-1992+1], label=\"model\", color=:blue, linewidth=2)\n\nplot!(subplot3, [1998:2007], data_em_sh, label=\"firm data\", color=:red, linewidth=2)\n\nplot!(subplot3, [1992:2007], data_em_sh_agg, label=\"aggregate data\", color=:black, linewidth=2)\n\nf3 = plot(subplot3, title=\"Private Employment Share\", titlefontsize=8, xlabel=\"year\")\n\nsavefig(f3, \"figure_3.png\")\n\n\n#Figure 4\n\nsubplot4 = plot([1992:end_year], BoP_Y_t[1:end_year-1992+1], label=\"model\", color=:blue, linewidth=2)\n\nplot!(subplot4, [1992:2007], data_SI_Y, label=\"data\", color=:red, linewidth=2)\n\nf4p1 = plot(subplot4, title=\"Net Export GDP Ratio\",titlefontsize=8, xlabel=\"year\")\n\n\nsubplot5 = plot([1992:end_year], FA_Y_t[1:end_year-1992+1], label=\"model\", color=:blue, linewidth=2)\n\nplot!(subplot5, [1992:2007], data_res, label=\"data\", color=:red, linewidth=2)\n\nf4p2 = plot(subplot5, title=\"Foreign Reserve GDP Ratio\", titlefontsize=8, xlabel=\"year\")\n\nf4 = plot(f4p1, f4p2, layout=(2,1))\n\nsavefig(f4, \"figure_4.png\")\n\n#Figure 5 \n\nsubplot6 = plot([1993:end_year], TFP_t[2:end_year-1992+1], color=:blue, linewidth=2)\nf5 = plot(subplot6, title=\"TFP Growth Rate\", titlefontsize=8, xlabel=\"year\")\n\nsavefig(f5, \"figure_5.png\")\n\n# subplot(1,1,1)\n# plot([1993:end_year],YG_t(2:end_year-1992+1),'-','color','b','linewidth',2)\n# xlabel('year')\n# title('GDP growth rate')\n# print -f1 -r600 -depsc 'TFP'\n\n#Figure 6\n\nsubplot7 = plot([1992:2012], ice_t[1:21], color=:blue, linewidth=2)\nf6 = plot(subplot7, title=\"Iceburg Costs\", titlefontsize=8, xlabel=\"year\")\n\nsavefig(f6, \"figure_6.png\")\n\n\n#Figure 7\n\nsubplot8 = plot([1992:2012], RR_t[1:21], color=:blue, linewidth=2) \nf7p1 = plot(subplot8, title=\"Aggregate Rate of Return to Capital\", titlefontsize=8,xlabel=\"year\")\n\nsubplot9 = plot([1992:2012], labor_share_t[1:21], color=:blue, linewidth=2)\nf7p2 = plot(subplot9, title=\"Labor Share\", titlefontsize=8, xlabel=\"year\")\n\nf7 = plot(f7p1, f7p2, layout=(2,1))\n\nsavefig(f7, \"figure_7.png\")\n\n#Figure 8\n\nf8p1 = scatter(NE_N_t[1:time_max-1], Y_t[1:time_max-1], xlabel=\"private employment share\", ylabel=\"GDP\")\n\nf8p2 = scatter(NG_t, YG_t, xlabel=\"private employment share growth rate\", ylabel=\"GDP growth rate\")\n\nf8 = plot(f8p1, f8p2, layout=(2,1))\n\nsavefig(f8, \"figure_8.png\")","category":"page"},{"location":"","page":"Code and Results","title":"Code and Results","text":"# workers savings and assets\nwealth_F = zeros(Float64, (time_max+age_max-1), (age_max))\nconsumption_F = zeros(Float64, (time_max+age_max-1), (age_max))\n\nAF = zeros(Float64, time_max, age_max)\nCF = zeros(Float64, time_max, age_max)\nCE = zeros(Float64, time_max, age_max)\n\nN_t = zeros(Float64, time_max)\nAF_t = zeros(Float64, time_max)\nCF_t = zeros(Float64, time_max)\nCE_t = zeros(Float64, time_max)\nKF_t = zeros(Float64, time_max)\nYF_t = zeros(Float64, time_max)\nNF_t = zeros(Float64, time_max)\nNE_N_t = zeros(Float64, time_max)\nIF_t = zeros(Float64, time_max)\nIE_t = zeros(Float64, time_max)\nIF_Y_t = zeros(Float64, time_max)\nI_Y_t = zeros(Float64, time_max)\nY_N_t = zeros(Float64, time_max)\nSE_YE_t = zeros(Float64, time_max)\nSE_t = zeros(Float64, time_max)\nSF_YF_t = zeros(Float64, time_max)\nIE_Y_t = zeros(Float64, time_max)\nSF_t = zeros(Float64, time_max)\nFA_Y_t = zeros(Float64, time_max)\nBoP_Y_t = zeros(Float64, time_max)\nTFP_t = zeros(Float64, time_max)\nYG_t = zeros(Float64, time_max)\nK_Y_t = zeros(Float64, time_max)\nS_Y_t = zeros(Float64, time_max)\n\nfor ii = 2:age_max\n    \n    # computing existing workers wealth given the guess of  m_t and rho_t\n    result=fun_saving_F_existing([ii,wealth_pre[ii]], dictmain, dictopt)\n    wealth = result[:wealth]\n    consumption = result[:consumption]    \n\n    # wealth time series for the existing workers with age ii\n    for tt = 1:age_max-ii+1\n        wealth_F[tt,ii+tt-1]=wealth[ii+tt-1]\n        consumption_F[tt,ii+tt-1]=consumption[ii+tt-1]\n    end    \nend # existing workers\n\n# newly born workers\nfor tt = 1:time_max\n        \n    # computing workers wealth given the guess of  m_t and rho_t\n    result=fun_saving_F_newly_born([tt], dictmain, dictopt)\n    wealth = result[:wealth]\n    consumption = result[:consumption]\n\n    # wealth time series for the existing enterpreneur with age ii\n    for ii = 1:age_max\n        wealth_F[tt+ii-1,ii]=wealth[ii]\n        consumption_F[tt+ii-1,ii]=consumption[ii]\n    end\nend # newly born workers\n\n# demographic structure and others\nfor t = 1:time_max\n    \n    # no migration\n    N_t[t]=nw_pre\n    \n    # total assets of workers and total consumptions\n    for i = 1:age_max\n        AF[t,i]=n_weight[i]*wealth_F[t,i] \n        CF[t,i]=n_weight[i]*consumption_F[t,i]\n        CE[t,i]=e_weight[i]*consumption_E[t,i]\n    end\n    AF_t[t]=sum(AF[t,:]) # aggregate capital in the E sector\n    CF_t[t]=sum(CF[t,:]) # aggregate consumption in the F sector\n    CE_t[t]=sum(CE[t,:]) # aggregate consumption in the E sector\n    \n    # the F sector\n    if NE_t[t] < N_t[t]\n        KF_t[t]=(alp/(r/(1-ice_t[t])+del))^(1/(1-alp))*(N_t[t]-NE_t[t]) # aggregate capital in the F sector\n        YF_t[t]=KF_t[t]^alp*(N_t[t]-NE_t[t])^(1-alp); # aggregate output in the F sector\n        NF_t[t]=N_t[t]-NE_t[t] # aggregate workers in the F sector\n    else\n        KF_t[t]=0 \n        YF_t[t]=0 \n        NF_t[t]=0\n    end\n\nend\n\n# aggregation\nY_t=YF_t+YE_t\n\nK_t=KF_t+KE_t\n\nC_t=CF_t+CE_t\n\nfor t = 1:time_max-1\n    \n    # private employment share\n    NE_N_t[t]=NE_t[t]/N_t[t]\n    \n    # computing investment in the F sector\n    IF_t[t]=(1+g_t)*(1+g_n)*KF_t[t+1]-(1-del)*KF_t[t]\n    \n    # computing investment in the E sector\n    IE_t[t]=(1+g_t)*(1+g_n)*KE_t[t+1]-(1-del)*KE_t[t]\n    \n    # investment rates in the two sector\n    if YF_t[t]>0\n        IF_Y_t[t]=IF_t[t]/YF_t[t]\n    else\n        IF_Y_t[t]=0\n    end\n    IE_Y_t[t]=IE_t[t]/YE_t[t]\n    \n    # computing workers savings\n    SF_t[t]=(1+g_t)*(1+g_n)*AF_t[t+1]-AF_t[t]+del*KF_t[t]\n    if YF_t[t] > 0\n        SF_YF_t[t]=SF_t[t]/YF_t[t]\n    end\n\n    # computing enterpreneurs savings\n    SE_t[t]=(1+g_t)*(1+g_n)*AE_t[t+1]-AE_t[t]+del*KE_t[t]\n    SE_YE_t[t]=SE_t[t]/YE_t[t]\n    \n    # aggregate output per capita\n    Y_N_t[t]=Y_t[t]/N_t[t]\n    \n    # aggregate investment rate\n    I_Y_t[t]=(IF_t[t]+IE_t[t])/Y_t[t]\n    \n    # aggregate saving rate\n    S_Y_t[t]=(SF_t[t]+SE_t[t])/Y_t[t]\n\n    # capital output ratio\n    K_Y_t[t]=K_t[t]/Y_t[t]\n    \n    # capital outflows\n    FA_Y_t[t]=(AE_t[t]+AF_t[t]-K_t[t])/Y_t[t] # stock\n    BoP_Y_t[t]=S_Y_t[t]-I_Y_t[t] # flow\n    \n    if t > 1\n        TFP_t[t]=Y_t[t]/Y_t[t-1]-alp*K_t[t]/K_t[t-1]-(1-alp)*N_t[t]/N_t[t-1]\n        YG_t[t]=(Y_t[t]/Y_t[t-1]-1)+g_n+g_t\n    end\n    \nend\n\n# figures\ntime_begin=1\ntime_end=100 \ntime_max-1\ntt=[time_begin:time_end]\n\ndata_sav=[0.375905127\n0.407118937\n0.417687893\n0.418696583\n0.40780248\n0.410464312\n0.403822419\n0.38944417\n0.377046856\n0.386282215\n0.404312245\n0.432183421\n0.45699599\n0.48157501\n0.501039245\n0.51206739\n];\n\ndata_inv=[0.365907013\n0.425514577\n0.405060796\n0.402900174\n0.38812706\n0.366991801\n0.361881671\n0.361607682\n0.352842054\n0.36494929\n0.378603128\n0.410289533\n0.431546215\n0.427396271\n0.425903209\n0.423250045\n];\n\ndata_res=[0.038897003\n0.033068468\n0.088594251\n0.09722219\n0.117766451\n0.1420134\n0.138692692\n0.140515342\n0.138805234\n0.161149952\n0.196974228\n0.244702191\n0.314965846\n0.355479964\n0.383515959\n0.441448679\n];\n\ndata_em_sh=[0.041140261\n0.063212681\n0.10366673\n0.168350106\n0.232185343\n0.322086332\n0.434391151\n0.474376982\n0.522120471\n0.563805401\n];\n\ndata_SI_Y=[0.009998114\n-0.01839564\n0.012627097\n0.015796409\n0.01967542\n0.043472511\n0.041940748\n0.027836488\n0.024204802\n0.021332925\n0.025709117\n0.021893888\n0.025449774\n0.054178739\n0.075136036\n0.088817345\n];\n\n# end of year\nend_year=2012\n\nr_F=r./(1 .-ice_t)\n\np1 = plot([1992:2012], r_F[1:21], xlims=(1992, end_year), ylims=(0.0, 0.12), \nxlabel=\"year\", title=\"Panel 1: rate of return in F firms\", titlefontsize=8,\ncolor=:blue, linewidth=2)\n\n\np2 = plot([1992:end_year], NE_N_t[1:end_year-1992+1],\ntitle=\"Panel 2: E firm employment share\", \ntitlefontsize=8,\nlabel=\"model\",\nxlabel=\"year\",\nxlims=(1992, end_year),\nylims=(0.0, 0.801),\ncolor=:blue, linewidth=2)\nplot!(p2, [1998:2007], data_em_sh, color=:red, linewidth=2, label=\"firm data\")\nplot!(p2, [1992:2007], data_em_sh_agg, color=:black, label=\"aggregate data\")\n\n\np3 = plot([1992:end_year], S_Y_t[1:end_year-1992+1], \nlabel=\"model\",\nxlabel=\"year\",\nxlims=(1992, end_year),\nylims=(0.35, 0.601),\ntitle=\"Panel 3: aggregate saving rate\",\ntitlefontsize=8,\ncolor=:blue, linewidth=2)\nplot!(p3, [1992:2007], data_sav, color=:red, label=\"data\")\n\n\np4 = plot([1992:end_year], I_Y_t[1:end_year-1992+1], \nxlabel=\"year\",\ntitle=\"Panel 4: aggregate investment rate\",\ntitlefontsize=8,\nxlims=(1992, end_year),\nylims=(0.30, 0.45),\ncolor=:blue, linewidth=2)\nplot!(p4, [1992:2007], data_inv, color=:red, linewidth=2, label=\"data\")\n\n\n# subplot(3,2,5)\n# plot([1992:end_year],BoP_Y_t(1:end_year-1992+1),'-','color','b','linewidth',2)\n# hold on\n# plot([1992:2007],data_SI_Y,'-.','color','r','linewidth',2)\n# hold off\n# xlabel('year')\n# # legend('model','data')\n# axis([1992 end_year -0.05 0.201])\n# title('net export GDP ratio')\n# hold off\n\n\np5 = plot([1992:end_year], FA_Y_t[1:end_year-1992+1], \nlabel=\"model\", \nxlabel=\"year\",\ntitle=\"Panel 5: foreign reserve / GDP\",\ntitlefontsize=8,\nxlims=(1992, end_year),\nylims=(0.0, 0.75),\ncolor=:blue, linewidth=2)\nplot!(p5, [1992:2007], data_res, label=\"data\", color=:red, linewidth=2)\n\n\np6 = plot([1992:end_year], TFP_t[1:end_year-1992+1] .+(1-alp)*g_t, \nxlabel=\"year\",\nlabel=\"model\",\ntitle=\"Panel 6: TFP growth rate\",\ntitlefontsize=8,\nxlims=(1992, end_year),\nylims=(0.0, 0.1),\ncolor=:blue, linewidth=2)\n\nf = plot(p1, p2, p3, p4, p5, p6, layout=(3,2))\nsavefig(f, \"six_panel.png\")","category":"page"},{"location":"#Result-and-Comparison","page":"Code and Results","title":"Result and Comparison","text":"","category":"section"},{"location":"#How-to-get-the-Result","page":"Code and Results","title":"How to get the Result","text":"","category":"section"},{"location":"","page":"Code and Results","title":"Code and Results","text":"(Image:  Transition in the Analytical Model)","category":"page"},{"location":"","page":"Code and Results","title":"Code and Results","text":"(Image: Replication of the result)","category":"page"},{"location":"","page":"Code and Results","title":"Code and Results","text":"(Image: Transition in the Calibrated Economy)","category":"page"},{"location":"","page":"Code and Results","title":"Code and Results","text":"(Image: Replication of the result)","category":"page"},{"location":"","page":"Code and Results","title":"Code and Results","text":"We can see from the two figures that our replication is mostly the same as the paper had. So the result would be similar.","category":"page"},{"location":"","page":"Code and Results","title":"Code and Results","text":"(Image: Aggregate saving and investment rate)","category":"page"},{"location":"","page":"Code and Results","title":"Code and Results","text":"in which we can see that the model and the data fit well.","category":"page"},{"location":"","page":"Code and Results","title":"Code and Results","text":"(Image: Private employment share)","category":"page"},{"location":"","page":"Code and Results","title":"Code and Results","text":"(Image: GDP ratio of net export and foreign reserve)","category":"page"},{"location":"","page":"Code and Results","title":"Code and Results","text":"(Image: TFP growth rate)","category":"page"},{"location":"","page":"Code and Results","title":"Code and Results","text":"(Image: AIceberg costs)","category":"page"},{"location":"","page":"Code and Results","title":"Code and Results","text":"(Image: Aggregate rate of return to capital and labor share)","category":"page"},{"location":"","page":"Code and Results","title":"Code and Results","text":"(Image: Private employment share and growth rate)","category":"page"}]
}
